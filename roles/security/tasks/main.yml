---
# roles/security/tasks/main.yml
# Security hardening for SummitEthic infrastructure

- name: System Security - Update and upgrade packages
  apt:
    update_cache: yes
    upgrade: dist
    autoremove: yes
    autoclean: yes

- name: Install security packages
  apt:
    name:
      - ufw
      - fail2ban
      - aide
      - rkhunter
      - auditd
      - apparmor
      - apparmor-utils
      - libpam-pwquality
      - apt-listchanges
      - needrestart
      - debsums
      - chkrootkit
    state: present

# SSH Hardening
- name: Configure SSH for security
  template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: '0600'
    backup: yes
    validate: '/usr/sbin/sshd -t -f %s'
  notify: restart sshd

- name: Set SSH key permissions
  file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: '0600'
  loop:
    - /etc/ssh/ssh_host_rsa_key
    - /etc/ssh/ssh_host_ecdsa_key
    - /etc/ssh/ssh_host_ed25519_key

# Firewall Configuration
- name: Configure UFW defaults
  ufw:
    direction: "{{ item.direction }}"
    policy: "{{ item.policy }}"
  loop:
    - { direction: 'incoming', policy: 'deny' }
    - { direction: 'outgoing', policy: 'allow' }
  notify: restart ufw

- name: Configure UFW rules
  ufw:
    rule: "{{ item.rule }}"
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
    src: "{{ item.src | default('any') }}"
    comment: "{{ item.comment }}"
  loop:
    - { rule: 'allow', port: '22', proto: 'tcp', src: "{{ admin_ip_range }}", comment: 'SSH from admin network' }
    - { rule: 'allow', port: '80', proto: 'tcp', comment: 'HTTP' }
    - { rule: 'allow', port: '443', proto: 'tcp', comment: 'HTTPS' }
    - { rule: 'allow', port: '9100', proto: 'tcp', src: "{{ monitoring_ip }}", comment: 'Node Exporter' }
  notify: restart ufw

- name: Enable UFW
  ufw:
    state: enabled
    logging: 'on'

# Fail2ban Configuration
- name: Configure fail2ban
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: '0644'
  loop:
    - { src: 'fail2ban-jail.local.j2', dest: '/etc/fail2ban/jail.local' }
    - { src: 'fail2ban-docker.conf.j2', dest: '/etc/fail2ban/filter.d/docker.conf' }
  notify: restart fail2ban

# System Hardening
- name: Configure system security limits
  template:
    src: limits.conf.j2
    dest: /etc/security/limits.d/99-summitethic.conf
    owner: root
    group: root
    mode: '0644'

- name: Configure sysctl for security
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
  loop:
    # Network security
    - { name: 'net.ipv4.tcp_syncookies', value: '1' }
    - { name: 'net.ipv4.ip_forward', value: '1' }  # For Docker
    - { name: 'net.ipv4.conf.all.rp_filter', value: '1' }
    - { name: 'net.ipv4.conf.default.rp_filter', value: '1' }
    - { name: 'net.ipv4.conf.all.accept_source_route', value: '0' }
    - { name: 'net.ipv4.conf.default.accept_source_route', value: '0' }
    - { name: 'net.ipv4.conf.all.send_redirects', value: '0' }
    - { name: 'net.ipv4.conf.default.send_redirects', value: '0' }
    - { name: 'net.ipv4.conf.all.accept_redirects', value: '0' }
    - { name: 'net.ipv4.conf.default.accept_redirects', value: '0' }
    - { name: 'net.ipv4.icmp_echo_ignore_broadcasts', value: '1' }
    - { name: 'net.ipv4.icmp_ignore_bogus_error_responses', value: '1' }
    - { name: 'net.ipv4.conf.all.log_martians', value: '1' }
    - { name: 'net.ipv4.conf.default.log_martians', value: '1' }
    # Kernel security
    - { name: 'kernel.randomize_va_space', value: '2' }
    - { name: 'kernel.panic', value: '60' }
    - { name: 'kernel.panic_on_oops', value: '60' }
    - { name: 'kernel.yama.ptrace_scope', value: '1' }
    - { name: 'kernel.dmesg_restrict', value: '1' }
    - { name: 'kernel.kptr_restrict', value: '2' }
    # File system security
    - { name: 'fs.suid_dumpable', value: '0' }
    - { name: 'fs.protected_hardlinks', value: '1' }
    - { name: 'fs.protected_symlinks', value: '1' }

# Audit Configuration
- name: Configure auditd rules
  template:
    src: audit.rules.j2
    dest: /etc/audit/rules.d/summitethic.rules
    owner: root
    group: root
    mode: '0640'
  notify: restart auditd

# AppArmor Profiles
- name: Copy custom AppArmor profiles
  copy:
    src: "apparmor/{{ item }}"
    dest: "/etc/apparmor.d/{{ item }}"
    owner: root
    group: root
    mode: '0644'
  loop:
    - usr.bin.docker
    - docker-containers
  notify: reload apparmor

# Secrets Management with HashiCorp Vault
- name: Install Vault for secrets management
  block:
    - name: Add HashiCorp GPG key
      apt_key:
        url: https://apt.releases.hashicorp.com/gpg
        state: present

    - name: Add HashiCorp repository
      apt_repository:
        repo: "deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
        state: present

    - name: Install Vault
      apt:
        name: vault
        state: present

    - name: Configure Vault
      template:
        src: vault.hcl.j2
        dest: /etc/vault.d/vault.hcl
        owner: vault
        group: vault
        mode: '0640'
      notify: restart vault

    - name: Initialize Vault (if not already initialized)
      shell: |
        vault operator init -key-shares=5 -key-threshold=3 \
          -format=json > /opt/vault/init.json
      args:
        creates: /opt/vault/init.json
      environment:
        VAULT_ADDR: "http://127.0.0.1:8200"

# Log Rotation
- name: Configure log rotation for security logs
  template:
    src: logrotate-security.j2
    dest: /etc/logrotate.d/security
    owner: root
    group: root
    mode: '0644'

# Create security user
- name: Create security audit user
  user:
    name: secaudit
    groups: adm,systemd-journal
    shell: /bin/bash
    home: /home/secaudit
    createhome: yes
    state: present

- name: Configure sudo for security audit
  copy:
    content: |
      # Security audit user - read-only access to logs
      secaudit ALL=(ALL) NOPASSWD: /usr/bin/journalctl, /usr/bin/aureport, /usr/bin/ausearch
    dest: /etc/sudoers.d/secaudit
    mode: '0440'
    validate: 'visudo -cf %s'